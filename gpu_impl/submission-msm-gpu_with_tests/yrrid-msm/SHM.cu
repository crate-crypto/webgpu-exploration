/***

Copyright (c) 2022, Yrrid Software, Inc.  All rights reserved.
Licensed under the Apache License, Version 2.0, see LICENSE for details.

Written by Niall Emmart.

***/

__managed__ uint32_t SHMData[32*12]={
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,  
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000001, 0x8508C000, 0x30000000, 0x170B5D44, 0xBA094800, 0x1EF3622F,
  0x00F5138F, 0x1A22D9F3, 0x6CA1493B, 0xC63B05C0, 0x17C510EA, 0x01AE3A46,
  0x00000002, 0x0A118000, 0x60000001, 0x2E16BA88, 0x74129000, 0x3DE6C45F,
  0x01EA271E, 0x3445B3E6, 0xD9429276, 0x8C760B80, 0x2F8A21D5, 0x035C748C,
  0x00000003, 0x8F1A4000, 0x90000001, 0x452217CC, 0x2E1BD800, 0x5CDA268F,
  0x02DF3AAD, 0x4E688DD9, 0x45E3DBB1, 0x52B11141, 0x474F32C0, 0x050AAED2,
  0x00000004, 0x14230000, 0xC0000002, 0x5C2D7510, 0xE8252000, 0x7BCD88BE,
  0x03D44E3C, 0x688B67CC, 0xB28524EC, 0x18EC1701, 0x5F1443AB, 0x06B8E918,
  0x00000005, 0x992BC000, 0xF0000002, 0x7338D254, 0xA22E6800, 0x9AC0EAEE,
  0x04C961CB, 0x82AE41BF, 0x1F266E27, 0xDF271CC2, 0x76D95495, 0x0867235E,
  0x00000006, 0x1E348000, 0x20000003, 0x8A442F99, 0x5C37B000, 0xB9B44D1E,
  0x05BE755A, 0x9CD11BB2, 0x8BC7B762, 0xA5622282, 0x8E9E6580, 0x0A155DA4,
  0x00000007, 0xA33D4000, 0x50000003, 0xA14F8CDD, 0x1640F800, 0xD8A7AF4E,
  0x06B388E9, 0xB6F3F5A5, 0xF869009D, 0x6B9D2842, 0xA663766B, 0x0BC397EA,
  0x00000008, 0x28460000, 0x80000004, 0xB85AEA21, 0xD04A4000, 0xF79B117D,
  0x07A89C78, 0xD116CF98, 0x650A49D8, 0x31D82E03, 0xBE288756, 0x0D71D230,
  0x00000009, 0xAD4EC000, 0xB0000004, 0xCF664765, 0x8A538800, 0x168E73AD,
  0x089DB008, 0xEB39A98B, 0xD1AB9313, 0xF81333C3, 0xD5ED9840, 0x0F200C76,
  0x0000000A, 0x32578000, 0xE0000005, 0xE671A4A9, 0x445CD000, 0x3581D5DD,
  0x0992C397, 0x055C837E, 0x3E4CDC4F, 0xBE4E3984, 0xEDB2A92B, 0x10CE46BC,
  0x0000000B, 0xB7604000, 0x10000005, 0xFD7D01EE, 0xFE661800, 0x5475380C,
  0x0A87D726, 0x1F7F5D71, 0xAAEE258A, 0x84893F44, 0x0577BA16, 0x127C8103,
  0x0000000C, 0x3C690000, 0x40000006, 0x14885F32, 0xB86F6001, 0x73689A3C,
  0x0B7CEAB5, 0x39A23764, 0x178F6EC5, 0x4AC44505, 0x1D3CCB01, 0x142ABB49,
  0x0000000D, 0xC171C000, 0x70000006, 0x2B93BC76, 0x7278A801, 0x925BFC6C,
  0x0C71FE44, 0x53C51157, 0x8430B800, 0x10FF4AC5, 0x3501DBEC, 0x15D8F58F,
  0x0000000E, 0x467A8000, 0xA0000007, 0x429F19BA, 0x2C81F001, 0xB14F5E9C,
  0x0D6711D3, 0x6DE7EB4A, 0xF0D2013B, 0xD73A5085, 0x4CC6ECD6, 0x17872FD5,
  0x0000000F, 0xCB834000, 0xD0000007, 0x59AA76FE, 0xE68B3801, 0xD042C0CB,
  0x0E5C2562, 0x880AC53D, 0x5D734A76, 0x9D755646, 0x648BFDC1, 0x19356A1B,
  
  0xFFFFFF68, 0x02CDFFFF, 0x7FFFFFB1, 0x51409F83, 0x8A7D3FF2, 0x9F7DB3A9,     // R mod N      <-- index 16
  0x6E7C6305, 0x7B4E97B7, 0x803C84E8, 0x4CF495BF, 0xE2FDF49A, 0x008D6661,
  
  0x9400CD22, 0xB786686C, 0xB00431B1, 0x0329FCAA, 0x62D6B46D, 0x22A5F111,     // R^2 mod N
  0x827DC3AC, 0xBFDF7D03, 0x41790BF9, 0x837E92F0, 0x1E914B88, 0x006DFCCB,

  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,    
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,    
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,    
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,    
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
};

__device__ __forceinline__ void copyToShared(uint4* data) {
  for(int32_t i=threadIdx.x;i<32;i+=blockDim.x) {
    store_shared_u4(i*16, data[i*3 + 0]);
    store_shared_u4(i*16 + 512, data[i*3 + 1]);
    store_shared_u4(i*16 + 1024, data[i*3 + 2]);
  }
  __syncthreads();
}
